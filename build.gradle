buildscript {
	ext {
		springBootVersion = '2.4.3'
		pactVersion = '4.1.17'
	}
}
plugins {
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.springframework.boot' version "$springBootVersion"
	id 'au.com.dius.pact' version "$pactVersion"
	id 'idea'
}

import org.gradle.internal.os.OperatingSystem
subprojects {

	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'au.com.dius.pact'
	apply plugin: 'idea'
	apply from: "${project.rootDir}/gradle/test-cdc.gradle"

	group = 'com.example.buchladen'
	version = "1.0.0-${OperatingSystem.current().isWindows() ? System.getenv('USERNAME') : System.getenv('HOME')}"

	ext {
		encoding = 'UTF-8'
		javaVersion = JavaVersion.VERSION_11
	}

	sourceCompatibility = ext.javaVersion
	targetCompatibility = ext.javaVersion
	compileJava.options.encoding = ext.encoding
	compileTestJava.options.encoding = ext.encoding

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
	}

	dependencyManagement {
		imports {
			mavenBom("org.springframework.boot:spring-boot-dependencies:$springBootVersion")
		}
	}

	tasks.withType(Test) {
		afterSuite { desc, result ->
			if (!desc.parent)
				println("${result.resultType} " +
						"(${result.testCount} tests, " +
						"${result.successfulTestCount} successes, " +
						"${result.failedTestCount} failures, " +
						"${result.skippedTestCount} skipped)")
		}
	}
}